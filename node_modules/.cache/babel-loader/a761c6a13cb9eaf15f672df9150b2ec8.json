{"ast":null,"code":"import axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { rideAdd } from '../redux/reducers/RideSlice';\n\nconst ApiRides = (userState, dispatch) => {\n  let rides = [];\n\n  const setAllRides = data => {\n    return rides = data;\n  };\n\n  axios.get('https://assessment.api.vweb.app/rides').then(res => dispatch(rideAdd({\n    rides_data: res.data\n  })));\n  let userStation = userState.station_code;\n  let ridesFilter = rides.filter(el => el.station_path.includes(userStation));\n  console.log(rides);\n  console.log(userState);\n};\n\n_c = ApiRides;\nexport default ApiRides;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiRides\");","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/apis/ApiRides.jsx"],"names":["axios","useSelector","rideAdd","ApiRides","userState","dispatch","rides","setAllRides","data","get","then","res","rides_data","userStation","station_code","ridesFilter","filter","el","station_path","includes","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,6BAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,SAAD,EAAaC,QAAb,KAA0B;AAEvC,MAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAMC,WAAW,GAAGC,IAAI,IAAI;AACxB,WAAOF,KAAK,GAAGE,IAAf;AACH,GAFD;;AAIAR,EAAAA,KAAK,CAACS,GAAN,CAAU,uCAAV,EAAmDC,IAAnD,CAEIC,GAAG,IAAIN,QAAQ,CAACH,OAAO,CAAE;AAACU,IAAAA,UAAU,EAACD,GAAG,CAACH;AAAhB,GAAF,CAAR,CAFnB;AAMA,MAAIK,WAAW,GAAGT,SAAS,CAACU,YAA5B;AAEA,MAAIC,WAAW,GAAGT,KAAK,CAACU,MAAN,CAAcC,EAAE,IAAKA,EAAE,CAACC,YAAH,CAAgBC,QAAhB,CAA0BN,WAA1B,CAArB,CAAlB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAaf,KAAb;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAajB,SAAb;AAGH,CAtBD;;KAAMD,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { rideAdd } from '../redux/reducers/RideSlice';\r\n\r\nconst ApiRides = (userState , dispatch) => {\r\n\r\n    let rides = [];\r\n\r\n    const setAllRides = data => {\r\n        return rides = data\r\n    }\r\n\r\n    axios.get('https://assessment.api.vweb.app/rides').then(\r\n\r\n        res => dispatch(rideAdd( {rides_data:res.data} ))\r\n\r\n    )\r\n\r\n    let userStation = userState.station_code;\r\n\r\n    let ridesFilter = rides.filter( el =>  el.station_path.includes( userStation ) );\r\n\r\n    console.log( rides)\r\n    console.log( userState)\r\n    \r\n\r\n} \r\n\r\nexport default ApiRides;\r\n"]},"metadata":{},"sourceType":"module"}