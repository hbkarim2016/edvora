{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var RideSlice=createSlice({name:'RideSlice',initialState:{ridesNearState:[],ridesUpcomingState:[],ridesPastState:[],userState:[],dataCheck:1,upcomingCount:0,pastCount:0},reducers:{rideAdd:function rideAdd(state,action){var ridesData=action.payload.rides_data;var ridesUpcomingCount=action.payload.upcomingCount;var ridesUpcomingData=action.payload.ridesUpcoming_data;var ridesPastCount=action.payload.pastCount;var ridesPastData=action.payload.ridesPast_data;state.upcomingCount=ridesUpcomingCount;state.pastCount=ridesPastCount;state.ridesNearState=ridesData;state.ridesUpcomingState=ridesUpcomingData;state.ridesPastState=ridesPastData;state.dataCheck=0;console.log('from api ride');},userAdd:function userAdd(state,action){var userData=action.payload.user_data;state.userState=userData;},changeUpandPastCounts:function changeUpandPastCounts(state,action){state.upcomingCount=action.payload.upcomingCount;state.pastCount=action.payload.pastCount;}}});var _RideSlice$actions=RideSlice.actions,rideAdd=_RideSlice$actions.rideAdd,userAdd=_RideSlice$actions.userAdd,changeUpandPastCounts=_RideSlice$actions.changeUpandPastCounts;export{rideAdd,userAdd,changeUpandPastCounts};export default RideSlice.reducer;","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/redux/reducers/RideSlice.js"],"names":["createSlice","RideSlice","name","initialState","ridesNearState","ridesUpcomingState","ridesPastState","userState","dataCheck","upcomingCount","pastCount","reducers","rideAdd","state","action","ridesData","payload","rides_data","ridesUpcomingCount","ridesUpcomingData","ridesUpcoming_data","ridesPastCount","ridesPastData","ridesPast_data","console","log","userAdd","userData","user_data","changeUpandPastCounts","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CAC1BE,IAAI,CAAC,WADqB,CAE1BC,YAAY,CAAC,CACTC,cAAc,CAAC,EADN,CAETC,kBAAkB,CAAC,EAFV,CAGTC,cAAc,CAAC,EAHN,CAITC,SAAS,CAAC,EAJD,CAKTC,SAAS,CAAC,CALD,CAMTC,aAAa,CAAC,CANL,CAOTC,SAAS,CAAC,CAPD,CAFa,CAW1BC,QAAQ,CAAC,CACLC,OAAO,CAAE,iBAAEC,KAAF,CAASC,MAAT,CAAqB,CAC1B,GAAIC,CAAAA,SAAS,CAAGD,MAAM,CAACE,OAAP,CAAeC,UAA/B,CACA,GAAIC,CAAAA,kBAAkB,CAAGJ,MAAM,CAACE,OAAP,CAAeP,aAAxC,CACA,GAAIU,CAAAA,iBAAiB,CAAGL,MAAM,CAACE,OAAP,CAAeI,kBAAvC,CACA,GAAIC,CAAAA,cAAc,CAAGP,MAAM,CAACE,OAAP,CAAeN,SAApC,CACA,GAAIY,CAAAA,aAAa,CAAGR,MAAM,CAACE,OAAP,CAAeO,cAAnC,CACAV,KAAK,CAACJ,aAAN,CAAsBS,kBAAtB,CACAL,KAAK,CAACH,SAAN,CAAkBW,cAAlB,CACAR,KAAK,CAACT,cAAN,CAAuBW,SAAvB,CACAF,KAAK,CAACR,kBAAN,CAA2Bc,iBAA3B,CACAN,KAAK,CAACP,cAAN,CAAuBgB,aAAvB,CACAT,KAAK,CAACL,SAAN,CAAkB,CAAlB,CACAgB,OAAO,CAACC,GAAR,CAAY,eAAZ,EACH,CAdI,CAeLC,OAAO,CAAE,iBAAEb,KAAF,CAASC,MAAT,CAAqB,CAC1B,GAAIa,CAAAA,QAAQ,CAAGb,MAAM,CAACE,OAAP,CAAeY,SAA9B,CACAf,KAAK,CAACN,SAAN,CAAkBoB,QAAlB,CACH,CAlBI,CAmBLE,qBAAqB,CAAE,+BAAChB,KAAD,CAAOC,MAAP,CAAkB,CACrCD,KAAK,CAACJ,aAAN,CAAsBK,MAAM,CAACE,OAAP,CAAeP,aAArC,CACAI,KAAK,CAACH,SAAN,CAAkBI,MAAM,CAACE,OAAP,CAAeN,SAAjC,CACH,CAtBI,CAXiB,CAAD,CAA7B,CAqCO,uBAAoDT,SAAS,CAAC6B,OAA9D,CAAQlB,OAAR,oBAAQA,OAAR,CAAiBc,OAAjB,oBAAiBA,OAAjB,CAA0BG,qBAA1B,oBAA0BA,qBAA1B,C,8CACP,cAAe5B,CAAAA,SAAS,CAAC8B,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst RideSlice = createSlice({\r\n    name:'RideSlice',\r\n    initialState:{\r\n        ridesNearState:[],\r\n        ridesUpcomingState:[],\r\n        ridesPastState:[],\r\n        userState:[],\r\n        dataCheck:1,\r\n        upcomingCount:0,\r\n        pastCount:0\r\n    },\r\n    reducers:{\r\n        rideAdd: ( state, action ) => {\r\n            let ridesData = action.payload.rides_data;\r\n            let ridesUpcomingCount = action.payload.upcomingCount;\r\n            let ridesUpcomingData = action.payload.ridesUpcoming_data;\r\n            let ridesPastCount = action.payload.pastCount;\r\n            let ridesPastData = action.payload.ridesPast_data;\r\n            state.upcomingCount = ridesUpcomingCount;\r\n            state.pastCount = ridesPastCount;\r\n            state.ridesNearState = ridesData;\r\n            state.ridesUpcomingState = ridesUpcomingData;\r\n            state.ridesPastState = ridesPastData;\r\n            state.dataCheck = 0;\r\n            console.log('from api ride')\r\n        },\r\n        userAdd: ( state, action ) => {\r\n            let userData = action.payload.user_data;\r\n            state.userState = userData;\r\n        },\r\n        changeUpandPastCounts: (state,action) => {\r\n            state.upcomingCount = action.payload.upcomingCount;\r\n            state.pastCount = action.payload.pastCount;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { rideAdd, userAdd, changeUpandPastCounts } = RideSlice.actions;\r\nexport default RideSlice.reducer;"]},"metadata":{},"sourceType":"module"}