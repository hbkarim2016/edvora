{"ast":null,"code":"import{useDispatch,useSelector}from'react-redux';import ApiRides from'../../apis/ApiRides';import'./Rides.css';import DateFunc from'../Date/DateFunc';import{Routes,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Rides=function Rides(){var _useSelector=useSelector(function(state){return state.rideStore;}),userState=_useSelector.userState,dataCheck=_useSelector.dataCheck;var _useSelector2=useSelector(function(state){return state.originalStore;}),originalRidesNearest=_useSelector2.originalRidesNearest,ridesFilterIdValue=_useSelector2.ridesFilterIdValue,originalRidesPast=_useSelector2.originalRidesPast,originalRidesUpcoming=_useSelector2.originalRidesUpcoming;var dispatch=useDispatch();if(userState.length!==0){ApiRides(userState,dispatch,dataCheck);}return/*#__PURE__*/_jsx(\"div\",{className:\"rides\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:originalRidesNearest!==undefined&&/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:originalRidesNearest.length>0?originalRidesNearest.map(function(el,indx){return/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ride-single-img\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-data\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Ride Id : \",/*#__PURE__*/_jsx(\"span\",{children:el.id})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Origin Station : \",/*#__PURE__*/_jsx(\"span\",{children:el.origin_station_code})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"station_path : \",/*#__PURE__*/_jsxs(\"span\",{children:[\"[\",el.station_path.map(function(el_,indx_){return indx_+1!==el.station_path.length?el_+',':el_;}),\"]\"]})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Date : \",/*#__PURE__*/_jsx(\"span\",{children:\"\\n                                                                        \".concat(DateFunc(el.date).day<10?'0'+DateFunc(el.date).day:DateFunc(el.date).day,\"th \\n                                                                        \").concat(DateFunc(el.date).month,\" \\n                                                                        \").concat(DateFunc(el.date).year,\" \\n                                                                        \").concat(DateFunc(el.date).hours<10?'0'+DateFunc(el.date).hours:DateFunc(el.date).hours,\"\\n                                                                        :\\n                                                                        \").concat(DateFunc(el.date).minutes<10?'0'+DateFunc(el.date).minutes:DateFunc(el.date).minutes,\"\\n                                                                    \")})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Distance : \",/*#__PURE__*/_jsx(\"span\",{children:ridesFilterIdValue[indx]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-option\",children:[/*#__PURE__*/_jsx(\"div\",{children:el.city}),/*#__PURE__*/_jsx(\"div\",{children:el.state})]})]},el.id);}):/*#__PURE__*/_jsx(\"div\",{className:\"ride-single not-found\",children:\" Not Rides Here \"})}),/*#__PURE__*/_jsx(Route,{path:\"upcoming\",element:originalRidesUpcoming.length>0?originalRidesUpcoming.map(function(el,indx){return/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ride-single-img\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-data\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Ride Id : \",/*#__PURE__*/_jsx(\"span\",{children:el.id})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Origin Station : \",/*#__PURE__*/_jsx(\"span\",{children:el.origin_station_code})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"station_path : \",/*#__PURE__*/_jsxs(\"span\",{children:[\"[\",el.station_path.map(function(el_,indx_){return indx_+1!==el.station_path.length?el_+',':el_;}),\"]\"]})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Date : \",/*#__PURE__*/_jsx(\"span\",{children:\"\\n                                                                        \".concat(DateFunc(el.date).day<10?'0'+DateFunc(el.date).day:DateFunc(el.date).day,\"th \\n                                                                        \").concat(DateFunc(el.date).month,\" \\n                                                                        \").concat(DateFunc(el.date).year,\" \\n                                                                        \").concat(DateFunc(el.date).hours<10?'0'+DateFunc(el.date).hours:DateFunc(el.date).hours,\"\\n                                                                        :\\n                                                                        \").concat(DateFunc(el.date).minutes<10?'0'+DateFunc(el.date).minutes:DateFunc(el.date).minutes,\"\\n                                                                    \")})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Distance : \",/*#__PURE__*/_jsx(\"span\",{children:ridesFilterIdValue[indx]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-option\",children:[/*#__PURE__*/_jsx(\"div\",{children:el.city}),/*#__PURE__*/_jsx(\"div\",{children:el.state})]})]},el.id);}):/*#__PURE__*/_jsx(\"div\",{className:\"ride-single not-found\",children:\" Not Rides Here \"})}),/*#__PURE__*/_jsx(Route,{path:\"past\",element:originalRidesPast.length>0?originalRidesPast.map(function(el,indx){return/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ride-single-img\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-data\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Ride Id : \",/*#__PURE__*/_jsx(\"span\",{children:el.id})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Origin Station : \",/*#__PURE__*/_jsx(\"span\",{children:el.origin_station_code})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"station_path : \",/*#__PURE__*/_jsxs(\"span\",{children:[\"[\",el.station_path.map(function(el_,indx_){return indx_+1!==el.station_path.length?el_+',':el_;}),\"]\"]})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Date : \",/*#__PURE__*/_jsx(\"span\",{children:\"\\n                                                                    \".concat(DateFunc(el.date).day<10?'0'+DateFunc(el.date).day:DateFunc(el.date).day,\"th \\n                                                                    \").concat(DateFunc(el.date).month,\" \\n                                                                    \").concat(DateFunc(el.date).year,\" \\n                                                                    \").concat(DateFunc(el.date).hours<10?'0'+DateFunc(el.date).hours:DateFunc(el.date).hours,\"\\n                                                                    :\\n                                                                    \").concat(DateFunc(el.date).minutes<10?'0'+DateFunc(el.date).minutes:DateFunc(el.date).minutes,\"\\n                                                                \")})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Distance : \",/*#__PURE__*/_jsx(\"span\",{children:ridesFilterIdValue[indx]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ride-single-option\",children:[/*#__PURE__*/_jsx(\"div\",{children:el.city}),/*#__PURE__*/_jsx(\"div\",{children:el.state})]})]},el.id);}):/*#__PURE__*/_jsx(\"div\",{className:\"ride-single not-found\",children:\" Not Rides Here \"})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(\"div\",{className:\"ride-single not-found\",children:\" Not Rides Here \"})})]})})});};export default Rides;","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/components/Rides/Rides.jsx"],"names":["useDispatch","useSelector","ApiRides","DateFunc","Routes","Route","Rides","state","rideStore","userState","dataCheck","originalStore","originalRidesNearest","ridesFilterIdValue","originalRidesPast","originalRidesUpcoming","dispatch","length","undefined","map","el","indx","id","origin_station_code","station_path","el_","indx_","date","day","month","year","hours","minutes","city"],"mappings":"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","sourcesContent":["\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ApiRides from '../../apis/ApiRides';\r\nimport './Rides.css';\r\nimport DateFunc from '../Date/DateFunc';\r\nimport {Routes,Route} from \"react-router-dom\";\r\n\r\nconst Rides = () => {\r\n\r\n    const { userState, dataCheck } = useSelector( state => state.rideStore )\r\n    const { \r\n        originalRidesNearest,\r\n        ridesFilterIdValue,\r\n        originalRidesPast,\r\n        originalRidesUpcoming} = useSelector( state => state.originalStore )\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    if( userState.length !== 0 ){\r\n        ApiRides(userState ,dispatch,dataCheck)\r\n    }\r\n\r\n    return(\r\n        <div className=\"rides\">\r\n            <div className=\"container\">\r\n                { originalRidesNearest !== undefined &&\r\n                    <Routes>\r\n                    {/* NEAREST RIDES */}\r\n                        <Route path='/' \r\n                            element={\r\n                            originalRidesNearest.length > 0 ?\r\n                                originalRidesNearest.map( (el,indx) => {\r\n                                    return(\r\n                                        <div className=\"ride-single\" key={ el.id }>\r\n                                            <div className='ride-single-content'>\r\n                                                <div className='ride-single-img'></div>\r\n                                                <div className='ride-single-data'>\r\n                                                    <h2>Ride Id : <span>{ el.id }</span></h2>\r\n                                                    <h2>Origin Station : <span>{ el.origin_station_code }</span></h2>\r\n                                                    <h2>station_path : <span>[{ \r\n                                                                                    el.station_path.map( (el_, indx_) => \r\n                                                                                        indx_ + 1 !== el.station_path.length ? el_ + ',' : el_ \r\n                                                                                    ) \r\n                                                                                }]</span></h2>\r\n                                                    <h2>Date : <span>{`\r\n                                                                        ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \r\n                                                                        ${DateFunc(el.date).month} \r\n                                                                        ${DateFunc(el.date).year} \r\n                                                                        ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\r\n                                                                        :\r\n                                                                        ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\r\n                                                                    `}</span></h2>\r\n                                                    <h2>Distance : <span>{ridesFilterIdValue[indx]}</span></h2>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='ride-single-option'>\r\n                                                <div>{ el.city }</div>\r\n                                                <div>{ el.state }</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )})\r\n                                :\r\n                                    <div className=\"ride-single not-found\"> Not Rides Here </div>                                            \r\n                                }/>\r\n                    {/* UPCOMING RIDES */}\r\n                    <Route path='upcoming'\r\n                        element={\r\n                            originalRidesUpcoming.length > 0 ?\r\n                                originalRidesUpcoming.map( (el,indx) => {\r\n                                    return(\r\n                                        <div className=\"ride-single\" key={ el.id }>\r\n                                            <div className='ride-single-content'>\r\n                                                <div className='ride-single-img'></div>\r\n                                                <div className='ride-single-data'>\r\n                                                    <h2>Ride Id : <span>{ el.id }</span></h2>\r\n                                                    <h2>Origin Station : <span>{ el.origin_station_code }</span></h2>\r\n                                                    <h2>station_path : <span>[{ \r\n                                                                                    el.station_path.map( (el_, indx_) => \r\n                                                                                        indx_ + 1 !== el.station_path.length ? el_ + ',' : el_ \r\n                                                                                    ) \r\n                                                                                }]</span></h2>\r\n                                                    <h2>Date : <span>{`\r\n                                                                        ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \r\n                                                                        ${DateFunc(el.date).month} \r\n                                                                        ${DateFunc(el.date).year} \r\n                                                                        ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\r\n                                                                        :\r\n                                                                        ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\r\n                                                                    `}</span></h2>\r\n                                                    <h2>Distance : <span>{ridesFilterIdValue[indx]}</span></h2>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='ride-single-option'>\r\n                                                <div>{ el.city }</div>\r\n                                                <div>{ el.state }</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )})\r\n                        :\r\n                            <div className=\"ride-single not-found\"> Not Rides Here </div>\r\n                        }/>\r\n\r\n                    {/* PAST RIDES */}\r\n                    <Route path='past'\r\n                        element={\r\n                        originalRidesPast.length > 0 ?\r\n                            originalRidesPast.map( (el,indx) => {\r\n                                return(\r\n                                    <div className=\"ride-single\" key={ el.id }>\r\n                                        <div className='ride-single-content'>\r\n                                            <div className='ride-single-img'></div>\r\n                                            <div className='ride-single-data'>\r\n                                                <h2>Ride Id : <span>{ el.id }</span></h2>\r\n                                                <h2>Origin Station : <span>{ el.origin_station_code }</span></h2>\r\n                                                <h2>station_path : <span>[{ \r\n                                                                                el.station_path.map( (el_, indx_) => \r\n                                                                                    indx_ + 1 !== el.station_path.length ? el_ + ',' : el_ \r\n                                                                                ) \r\n                                                                            }]</span></h2>\r\n                                                <h2>Date : <span>{`\r\n                                                                    ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \r\n                                                                    ${DateFunc(el.date).month} \r\n                                                                    ${DateFunc(el.date).year} \r\n                                                                    ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\r\n                                                                    :\r\n                                                                    ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\r\n                                                                `}</span></h2>\r\n                                                <h2>Distance : <span>{ridesFilterIdValue[indx]}</span></h2>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='ride-single-option'>\r\n                                            <div>{ el.city }</div>\r\n                                            <div>{ el.state }</div>\r\n                                        </div>\r\n                                    </div>\r\n                                )})\r\n                        :\r\n                            <div className=\"ride-single not-found\"> Not Rides Here </div>                                               \r\n                        }/>\r\n                    <Route path='*' element={<div className=\"ride-single not-found\"> Not Rides Here </div>}/>\r\n                </Routes>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Rides;"]},"metadata":{},"sourceType":"module"}