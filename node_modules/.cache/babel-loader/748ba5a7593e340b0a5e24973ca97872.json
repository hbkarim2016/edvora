{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Computer\\\\my work\\\\apps\\\\edvora\\\\edvora\\\\src\\\\content\\\\components\\\\Header.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { test } from \"../redux/reducers/testSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const {\n    testState\n  } = useSelector(state => state.test);\n  const dispatch = useDispatch();\n\n  const testHandle = () => {\n    dispatch(test());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [testState, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testHandle,\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"lHoWr8a6qezfsi6pEPCWd25BZD0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/components/Header.jsx"],"names":["useDispatch","useSelector","test","Header","testState","state","dispatch","testHandle"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,6BAArB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,WAAW,CAAEI,KAAK,IAAIA,KAAK,CAACH,IAAjB,CAAjC;AACA,QAAMI,QAAQ,GAAGN,WAAW,EAA5B;;AACA,QAAMO,UAAU,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAACJ,IAAI,EAAL,CAAR;AACH,GAFD;;AAGA,sBACI;AAAA,eACKE,SADL,eAEI;AAAQ,MAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAZD;;GAAMJ,M;UACoBF,W,EACLD,W;;;KAFfG,M;AAaN,eAAeA,MAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { test } from \"../redux/reducers/testSlice\";\r\nconst Header = () => {\r\n    const { testState } = useSelector( state => state.test );\r\n    const dispatch = useDispatch();\r\n    const testHandle = () => {\r\n        dispatch(test())\r\n    }\r\n    return(\r\n        <header>\r\n            {testState}\r\n            <button onClick={testHandle}>Test</button>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}