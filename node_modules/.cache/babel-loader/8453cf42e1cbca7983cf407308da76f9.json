{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Computer\\\\my work\\\\apps\\\\edvora\\\\edvora\\\\src\\\\content\\\\components\\\\Rides\\\\Rides.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport ApiRides from '../../apis/ApiRides';\nimport './Rides.css';\nimport DateFunc from '../Date/DateFunc';\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rides = () => {\n  _s();\n\n  const {\n    userState,\n    dataCheck\n  } = useSelector(state => state.rideStore);\n  const {\n    originalRidesNearest,\n    originalRidesPast,\n    originalRidesUpcoming,\n    stateSelect,\n    citySelect\n  } = useSelector(state => state.originalStore);\n  const dispatch = useDispatch();\n\n  if (userState.length !== 0) {\n    ApiRides(userState, dispatch, dataCheck);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rides\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: originalRidesNearest !== undefined && /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: originalRidesNearest.map((el, indx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ride-single\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ride-single-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ride-single-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ride-single-data\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Ride Id : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: el.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 38,\n                      columnNumber: 67\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Origin Station : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: el.origin_station_code\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 74\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"station_path : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"[\", el.station_path.map((el_, indx_) => indx_ + 1 !== el.station_path.length ? el_ + ',' : el_), \"]\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 72\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Date : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: `\n                                                                        ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \n                                                                        ${DateFunc(el.date).month} \n                                                                        ${DateFunc(el.date).year} \n                                                                        ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\n                                                                        :\n                                                                        ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\n                                                                    `\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 64\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Distance : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 68\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ride-single-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: el.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: el.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 45\n              }, this)]\n            }, el.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"upcoming\",\n          element: originalRidesUpcoming.map((el, indx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ride-single\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ride-single-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ride-single-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ride-single-data\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Ride Id : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: el.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 59\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Origin Station : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: el.origin_station_code\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 66\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"station_path : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"[\", el.station_path.map((el_, indx_) => indx_ + 1 !== el.station_path.length ? el_ + ',' : el_), \"]\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 64\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Date : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: `\n                                                                ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \n                                                                ${DateFunc(el.date).month} \n                                                                ${DateFunc(el.date).year} \n                                                                ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\n                                                                :\n                                                                ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\n                                                            `\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 56\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Distance : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 60\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ride-single-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: el.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: el.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, el.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"past\",\n          element: originalRidesPast.map((el, indx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ride-single\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ride-single-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ride-single-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ride-single-data\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Ride Id : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: el.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 59\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Origin Station : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: el.origin_station_code\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 66\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"station_path : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"[\", el.station_path.map((el_, indx_) => indx_ + 1 !== el.station_path.length ? el_ + ',' : el_), \"]\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 64\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Date : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: `\n                                                                ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \n                                                                ${DateFunc(el.date).month} \n                                                                ${DateFunc(el.date).year} \n                                                                ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\n                                                                :\n                                                                ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\n                                                            `\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 56\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Distance : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 60\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ride-single-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: el.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: el.state\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this)]\n            }, el.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ride-single not-found\",\n            children: \" Not Rides Here \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Rides, \"qXnhSgs5GtL+hVN1KrCF7OvO35E=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Rides;\nexport default Rides;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rides\");","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/components/Rides/Rides.jsx"],"names":["useDispatch","useSelector","ApiRides","DateFunc","Routes","Route","Rides","userState","dataCheck","state","rideStore","originalRidesNearest","originalRidesPast","originalRidesUpcoming","stateSelect","citySelect","originalStore","dispatch","length","undefined","map","el","indx","id","origin_station_code","station_path","el_","indx_","date","day","month","year","hours","minutes","city"],"mappings":"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","sourcesContent":["\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ApiRides from '../../apis/ApiRides';\r\nimport './Rides.css';\r\nimport DateFunc from '../Date/DateFunc';\r\nimport {Routes,Route} from \"react-router-dom\";\r\n\r\nconst Rides = () => {\r\n\r\n    const { userState, dataCheck } = useSelector( state => state.rideStore )\r\n    const { \r\n        originalRidesNearest,\r\n        originalRidesPast,\r\n        originalRidesUpcoming, \r\n        stateSelect, \r\n        citySelect } = useSelector( state => state.originalStore )\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    if( userState.length !== 0 ){\r\n        ApiRides(userState ,dispatch,dataCheck)\r\n    }\r\n\r\n    return(\r\n        <div className=\"rides\">\r\n            <div className=\"container\">\r\n                { originalRidesNearest !== undefined &&\r\n                    <Routes>\r\n                    {/* NEAREST RIDES */}\r\n                        <Route path='/' \r\n                            element={\r\n                                originalRidesNearest.map( (el,indx) => {\r\n                                    return(\r\n                                        <div className=\"ride-single\" key={ el.id }>\r\n                                            <div className='ride-single-content'>\r\n                                                <div className='ride-single-img'></div>\r\n                                                <div className='ride-single-data'>\r\n                                                    <h2>Ride Id : <span>{ el.id }</span></h2>\r\n                                                    <h2>Origin Station : <span>{ el.origin_station_code }</span></h2>\r\n                                                    <h2>station_path : <span>[{ \r\n                                                                                    el.station_path.map( (el_, indx_) => \r\n                                                                                        indx_ + 1 !== el.station_path.length ? el_ + ',' : el_ \r\n                                                                                    ) \r\n                                                                                }]</span></h2>\r\n                                                    <h2>Date : <span>{`\r\n                                                                        ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \r\n                                                                        ${DateFunc(el.date).month} \r\n                                                                        ${DateFunc(el.date).year} \r\n                                                                        ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\r\n                                                                        :\r\n                                                                        ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\r\n                                                                    `}</span></h2>\r\n                                                    <h2>Distance : <span>0</span></h2>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='ride-single-option'>\r\n                                                <div>{ el.city }</div>\r\n                                                <div>{ el.state }</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )})}/>\r\n                    {/* UPCOMING RIDES */}\r\n                    <Route path='upcoming'\r\n                        element={originalRidesUpcoming.map( (el,indx) => {\r\n                            return(\r\n                                <div className=\"ride-single\" key={ el.id }>\r\n                                    <div className='ride-single-content'>\r\n                                        <div className='ride-single-img'></div>\r\n                                        <div className='ride-single-data'>\r\n                                            <h2>Ride Id : <span>{ el.id }</span></h2>\r\n                                            <h2>Origin Station : <span>{ el.origin_station_code }</span></h2>\r\n                                            <h2>station_path : <span>[{ \r\n                                                                            el.station_path.map( (el_, indx_) => \r\n                                                                                indx_ + 1 !== el.station_path.length ? el_ + ',' : el_ \r\n                                                                            ) \r\n                                                                        }]</span></h2>\r\n                                            <h2>Date : <span>{`\r\n                                                                ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \r\n                                                                ${DateFunc(el.date).month} \r\n                                                                ${DateFunc(el.date).year} \r\n                                                                ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\r\n                                                                :\r\n                                                                ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\r\n                                                            `}</span></h2>\r\n                                            <h2>Distance : <span>0</span></h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='ride-single-option'>\r\n                                        <div>{ el.city }</div>\r\n                                        <div>{ el.state }</div>\r\n                                    </div>\r\n                                </div>\r\n                            )})}/>\r\n                    {/* PAST RIDES */}\r\n                    <Route path='past'\r\n                        element={originalRidesPast.map( (el,indx) => {\r\n                            return(\r\n                                <div className=\"ride-single\" key={ el.id }>\r\n                                    <div className='ride-single-content'>\r\n                                        <div className='ride-single-img'></div>\r\n                                        <div className='ride-single-data'>\r\n                                            <h2>Ride Id : <span>{ el.id }</span></h2>\r\n                                            <h2>Origin Station : <span>{ el.origin_station_code }</span></h2>\r\n                                            <h2>station_path : <span>[{ \r\n                                                                            el.station_path.map( (el_, indx_) => \r\n                                                                                indx_ + 1 !== el.station_path.length ? el_ + ',' : el_ \r\n                                                                            ) \r\n                                                                        }]</span></h2>\r\n                                            <h2>Date : <span>{`\r\n                                                                ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \r\n                                                                ${DateFunc(el.date).month} \r\n                                                                ${DateFunc(el.date).year} \r\n                                                                ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\r\n                                                                :\r\n                                                                ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\r\n                                                            `}</span></h2>\r\n                                            <h2>Distance : <span>0</span></h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='ride-single-option'>\r\n                                        <div>{ el.city }</div>\r\n                                        <div>{ el.state }</div>\r\n                                    </div>\r\n                                </div>\r\n                            )})}/>\r\n                    <Route path='*' element={<div className=\"ride-single not-found\"> Not Rides Here </div>}/>\r\n                </Routes>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Rides;"]},"metadata":{},"sourceType":"module"}