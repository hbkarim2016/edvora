{"ast":null,"code":"import axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { rideAdd } from '../redux/reducers/RideSlice';\n\nconst ApiRides = userState => {\n  let rides = [];\n\n  const setAllRides = data => {\n    return rides = data;\n  };\n\n  axios.get('https://assessment.api.vweb.app/rides').then(res => {\n    console.log(res.data);\n  });\n  let userStation = userState.station_code;\n  let ridesFilter = rides.filter(el => el.station_path.includes(userStation));\n  console.log(rides);\n  console.log(userState);\n};\n\n_c = ApiRides;\nexport default ApiRides;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiRides\");","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/apis/ApiRides.jsx"],"names":["axios","useSelector","rideAdd","ApiRides","userState","rides","setAllRides","data","get","then","res","console","log","userStation","station_code","ridesFilter","filter","el","station_path","includes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,6BAAxB;;AAEA,MAAMC,QAAQ,GAAIC,SAAD,IAAe;AAC5B,MAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAMC,WAAW,GAAGC,IAAI,IAAI;AACxB,WAAOF,KAAK,GAAGE,IAAf;AACH,GAFD;;AAIAP,EAAAA,KAAK,CAACQ,GAAN,CAAU,uCAAV,EAAmDC,IAAnD,CAEIC,GAAG,IAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,IAAhB;AAAsB,GAFlC;AAMA,MAAIM,WAAW,GAAGT,SAAS,CAACU,YAA5B;AAEA,MAAIC,WAAW,GAAGV,KAAK,CAACW,MAAN,CAAcC,EAAE,IAAKA,EAAE,CAACC,YAAH,CAAgBC,QAAhB,CAA0BN,WAA1B,CAArB,CAAlB;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAaP,KAAb;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAaR,SAAb;AAGH,CArBD;;KAAMD,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { rideAdd } from '../redux/reducers/RideSlice';\r\n\r\nconst ApiRides = (userState) => {\r\n    let rides = [];\r\n\r\n    const setAllRides = data => {\r\n        return rides = data\r\n    }\r\n\r\n    axios.get('https://assessment.api.vweb.app/rides').then(\r\n\r\n        res => {console.log(res.data)}\r\n\r\n    )\r\n\r\n    let userStation = userState.station_code;\r\n\r\n    let ridesFilter = rides.filter( el =>  el.station_path.includes( userStation ) );\r\n\r\n    console.log( rides)\r\n    console.log( userState)\r\n    \r\n\r\n} \r\n\r\nexport default ApiRides;\r\n"]},"metadata":{},"sourceType":"module"}