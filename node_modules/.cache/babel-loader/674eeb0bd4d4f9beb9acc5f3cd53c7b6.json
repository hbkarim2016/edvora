{"ast":null,"code":"import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faArrowDownWideShort,faArrowDown}from'@fortawesome/free-solid-svg-icons';import'./Filter.css';import{useRef}from'react';import{useDispatch,useSelector}from'react-redux';import{NavLink}from'react-router-dom';import{originalRidesAddNearest,originalRidesAddUpcoming,originalRidesAddPast,originalChangeStateAndCity}from'../../redux/reducers/OriginalRidesSlice';import{changeUpandPastCounts}from'../../redux/reducers/RideSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Filter=function Filter(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.rideStore;}),ridesNearState=_useSelector.ridesNearState,ridesUpcomingState=_useSelector.ridesUpcomingState,ridesPastState=_useSelector.ridesPastState,upcomingCount=_useSelector.upcomingCount,pastCount=_useSelector.pastCount;var _useSelector2=useSelector(function(state){return state.originalStore;}),stateSelect=_useSelector2.stateSelect,citySelect=_useSelector2.citySelect;var filterRef=useRef();var stateRef=useRef();var cityRef=useRef();var handleFilterShow=function handleFilterShow(e){e.target.parentElement.classList.toggle('active');filterRef.current.classList.toggle('active');};var handleFilterSelect=function handleFilterSelect(refValue){refValue.current.classList.toggle('active');};var handleFilterSelectValue=function handleFilterSelectValue(e){var filterSelectValue=e.target.getAttribute('name');var filterField=e.target.parentElement.parentElement.id;dispatch(originalChangeStateAndCity({stateAndCityValue:filterField,stateAndCity:filterSelectValue}));if(filterSelectValue==='all'){dispatch(originalRidesAddNearest({originalRidesNearest:ridesNearState}));dispatch(originalRidesAddUpcoming({originalRidesUpcoming:ridesUpcomingState}));dispatch(originalRidesAddPast({originalRidesPast:ridesPastState}));dispatch(changeUpandPastCounts({upcomingCount:ridesUpcomingState.length,pastCount:ridesPastState.length}));}else if(filterSelectValue!=='all'&&filterField==='state'){var OrigNearState=ridesNearState.filter(function(el){return el.state===filterSelectValue;});var OrigUpcomingState=ridesUpcomingState.filter(function(el){return el.state===filterSelectValue;});var OrigPastState=ridesPastState.filter(function(el){return el.state===filterSelectValue;});OrigNearState.length>0?dispatch(originalRidesAddNearest({originalRidesNearest:OrigNearState})):dispatch(originalRidesAddNearest({originalRidesNearest:0}));OrigUpcomingState.length>0?dispatch(originalRidesAddUpcoming({originalRidesUpcoming:OrigUpcomingState})):dispatch(originalRidesAddUpcoming({originalRidesUpcoming:0}));OrigPastState.length>0?dispatch(originalRidesAddPast({originalRidesPast:OrigPastState})):dispatch(originalRidesAddUpcoming({originalRidesUpcoming:0}));dispatch(changeUpandPastCounts({upcomingCount:OrigUpcomingState.length,pastCount:OrigPastState.length}));}else if(filterSelectValue!=='all'&&filterField==='city'){var _OrigNearState=ridesNearState.filter(function(el){return el.city===filterSelectValue;});var _OrigUpcomingState=ridesUpcomingState.filter(function(el){return el.city===filterSelectValue;});var _OrigPastState=ridesPastState.filter(function(el){return el.city===filterSelectValue;});_OrigNearState.length>0?dispatch(originalRidesAddNearest({originalRidesNearest:_OrigNearState})):dispatch(originalRidesAddNearest({originalRidesNearest:0}));_OrigUpcomingState.length>0?dispatch(originalRidesAddUpcoming({originalRidesUpcoming:_OrigUpcomingState})):dispatch(originalRidesAddUpcoming({originalRidesUpcoming:0}));_OrigPastState.length>0?dispatch(originalRidesAddPast({originalRidesPast:_OrigPastState})):dispatch(originalRidesAddUpcoming({originalRidesUpcoming:0}));dispatch(changeUpandPastCounts({upcomingCount:_OrigUpcomingState.length,pastCount:_OrigPastState.length}));}else if(stateSelect!=='all'&&filterSelectValue==='all'||citySelect!=='all'&&filterSelectValue==='all'){if(stateSelect!=='all'){var nearFilterCity=ridesNearState.filter(function(el){return el.city===filterSelectValue;});var finallyNear=nearFilterCity.filter(function(el){return el.state===stateSelect;});var upcomingFilterCity=ridesUpcomingState.filter(function(el){return el.city===filterSelectValue;});var finallyUpcoming=upcomingFilterCity.filter(function(el){return el.state===stateSelect;});var pastFilterCity=ridesPastState.filter(function(el){return el.city===filterSelectValue;});var finallyPast=pastFilterCity.filter(function(el){return el.state===stateSelect;});finallyNear.length>0?dispatch(originalRidesAddNearest({originalRidesNearest:finallyNear})):dispatch(originalRidesAddNearest({originalRidesNearest:0}));finallyUpcoming.length>0?dispatch(originalRidesAddUpcoming({originalRidesUpcoming:finallyUpcoming})):dispatch(originalRidesAddUpcoming({originalRidesUpcoming:0}));finallyPast.length>0?dispatch(originalRidesAddPast({originalRidesPast:finallyPast})):dispatch(originalRidesAddUpcoming({originalRidesUpcoming:0}));dispatch(changeUpandPastCounts({upcomingCount:finallyUpcoming.length,pastCount:finallyPast.length}));}else if(citySelect!=='all'){var _nearFilterCity=ridesNearState.filter(function(el){return el.state===filterSelectValue;});var _finallyNear=_nearFilterCity.filter(function(el){return el.city===citySelect;});var _upcomingFilterCity=ridesUpcomingState.filter(function(el){return el.state===filterSelectValue;});var _finallyUpcoming=_upcomingFilterCity.filter(function(el){return el.city===citySelect;});var _pastFilterCity=ridesPastState.filter(function(el){return el.state===filterSelectValue;});var _finallyPast=_pastFilterCity.filter(function(el){return el.city===citySelect;});_finallyNear.length>0?dispatch(originalRidesAddNearest({originalRidesNearest:_finallyNear})):dispatch(originalRidesAddNearest({originalRidesNearest:0}));_finallyUpcoming.length>0?dispatch(originalRidesAddUpcoming({originalRidesUpcoming:_finallyUpcoming})):dispatch(originalRidesAddUpcoming({originalRidesUpcoming:0}));_finallyPast.length>0?dispatch(originalRidesAddPast({originalRidesPast:_finallyPast})):dispatch(originalRidesAddUpcoming({originalRidesUpcoming:0}));dispatch(changeUpandPastCounts({upcomingCount:_finallyUpcoming.length,pastCount:_finallyPast.length}));}}};return/*#__PURE__*/_jsx(\"div\",{className:\"filter\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-links\",children:[/*#__PURE__*/_jsx(NavLink,{className:function className(_ref){var isActive=_ref.isActive;return isActive?'active':'';},to:\"/\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Nearest rides\"})}),/*#__PURE__*/_jsx(NavLink,{className:function className(_ref2){var isActive=_ref2.isActive;return isActive?'active':'';},to:\"upcoming\",children:/*#__PURE__*/_jsxs(\"h2\",{children:[\"Upcoming rides (\",upcomingCount,\")\"]})}),/*#__PURE__*/_jsx(NavLink,{className:function className(_ref3){var isActive=_ref3.isActive;return isActive?'active':'';},to:\"past\",children:/*#__PURE__*/_jsxs(\"h2\",{children:[\"Past rides (\",pastCount,\")\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-selects\",children:[/*#__PURE__*/_jsxs(\"div\",{onClick:handleFilterShow,className:\"filter-header\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowDownWideShort}),/*#__PURE__*/_jsx(\"h2\",{children:\"Filter\"})]}),/*#__PURE__*/_jsxs(\"div\",{ref:filterRef,className:\"filter-lists\",children:[/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){return handleFilterSelect(stateRef);},className:\"filter-state filter-single-list\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"filter-select-style\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowDown})}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-select-style\",children:/*#__PURE__*/_jsxs(\"h2\",{children:[\"State (\",stateSelect,\")\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{ref:stateRef,id:\"state\",className:\"filter-state-list\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:handleFilterSelectValue,className:\"filter-single-list filter-list-items\",children:/*#__PURE__*/_jsx(\"div\",{className:\"filter-select-style\",name:\"all\",children:\"all\"})}),ridesNearState.length>0&&ridesNearState.map(function(el,indx){return/*#__PURE__*/_jsx(\"div\",{onClick:handleFilterSelectValue,className:\"filter-single-list filter-list-items\",children:/*#__PURE__*/_jsx(\"div\",{className:\"filter-select-style\",name:el.state,children:el.state})},indx);})]}),/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){return handleFilterSelect(cityRef);},className:\"filter-city filter-single-list\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"filter-select-style\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowDown})}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-select-style\",children:/*#__PURE__*/_jsxs(\"h2\",{children:[\"City (\",citySelect,\")\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{ref:cityRef,id:\"city\",className:\"filter-state-list\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:handleFilterSelectValue,className:\"filter-single-list filter-list-items\",children:/*#__PURE__*/_jsx(\"div\",{className:\"filter-select-style\",name:\"all\",children:\"all\"})}),ridesNearState.length>0&&ridesNearState.map(function(el,indx){return/*#__PURE__*/_jsx(\"div\",{onClick:handleFilterSelectValue,className:\"filter-single-list filter-list-items\",children:/*#__PURE__*/_jsx(\"div\",{className:\"filter-select-style\",name:el.city,children:el.city})},indx);})]})]})]})]})});};export default Filter;","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/components/Filter/Filter.jsx"],"names":["FontAwesomeIcon","faArrowDownWideShort","faArrowDown","useRef","useDispatch","useSelector","NavLink","originalRidesAddNearest","originalRidesAddUpcoming","originalRidesAddPast","originalChangeStateAndCity","changeUpandPastCounts","Filter","dispatch","state","rideStore","ridesNearState","ridesUpcomingState","ridesPastState","upcomingCount","pastCount","originalStore","stateSelect","citySelect","filterRef","stateRef","cityRef","handleFilterShow","e","target","parentElement","classList","toggle","current","handleFilterSelect","refValue","handleFilterSelectValue","filterSelectValue","getAttribute","filterField","id","stateAndCityValue","stateAndCity","originalRidesNearest","originalRidesUpcoming","originalRidesPast","length","OrigNearState","filter","el","OrigUpcomingState","OrigPastState","city","nearFilterCity","finallyNear","upcomingFilterCity","finallyUpcoming","pastFilterCity","finallyPast","isActive","map","indx"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowDownWideShort, faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport './Filter.css';\r\nimport { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { originalRidesAddNearest, \r\n        originalRidesAddUpcoming, \r\n        originalRidesAddPast, \r\n        originalChangeStateAndCity } from '../../redux/reducers/OriginalRidesSlice';\r\nimport { changeUpandPastCounts } from '../../redux/reducers/RideSlice';\r\nconst Filter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { ridesNearState, \r\n            ridesUpcomingState, \r\n            ridesPastState, \r\n            upcomingCount, \r\n            pastCount } = useSelector( state => state.rideStore );\r\n    \r\n    const { stateSelect,citySelect } = useSelector( state => state.originalStore );\r\n    const filterRef = useRef();\r\n    const stateRef = useRef();\r\n    const cityRef = useRef();\r\n\r\n    const handleFilterShow = e => {\r\n        e.target.parentElement.classList.toggle('active')\r\n        filterRef.current.classList.toggle('active')\r\n    }\r\n\r\n    const handleFilterSelect = refValue => {\r\n        refValue.current.classList.toggle('active')\r\n    }\r\n\r\n    const handleFilterSelectValue = e => {\r\n        let filterSelectValue = e.target.getAttribute('name');\r\n        let filterField = e.target.parentElement.parentElement.id;\r\n        dispatch( originalChangeStateAndCity({ stateAndCityValue:filterField,stateAndCity:filterSelectValue }) )\r\n        if( filterSelectValue === 'all' ){\r\n            dispatch( originalRidesAddNearest({ originalRidesNearest:ridesNearState }) )\r\n            dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:ridesUpcomingState }) )\r\n            dispatch( originalRidesAddPast({ originalRidesPast:ridesPastState }) )\r\n            dispatch( changeUpandPastCounts({ upcomingCount: ridesUpcomingState.length,pastCount: ridesPastState.length }) )\r\n        }else if( filterSelectValue !== 'all' && filterField === 'state' ){\r\n            let OrigNearState = ridesNearState.filter( el => el.state === filterSelectValue );\r\n            let OrigUpcomingState = ridesUpcomingState.filter( el => el.state === filterSelectValue );\r\n            let OrigPastState = ridesPastState.filter( el => el.state === filterSelectValue );\r\n            OrigNearState.length > 0 ? \r\n                dispatch( originalRidesAddNearest({ originalRidesNearest:OrigNearState }) )\r\n            :\r\n                dispatch( originalRidesAddNearest({ originalRidesNearest:0 }) )\r\n            OrigUpcomingState.length > 0 ? \r\n                dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:OrigUpcomingState }) )\r\n            :\r\n                dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:0 }) )\r\n            OrigPastState.length > 0 ? \r\n                dispatch( originalRidesAddPast({ originalRidesPast:OrigPastState }) )\r\n            :\r\n                dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:0 }) )\r\n            \r\n            dispatch( changeUpandPastCounts({ upcomingCount: OrigUpcomingState.length,pastCount: OrigPastState.length }) )\r\n        }else if( filterSelectValue !== 'all' && filterField === 'city' ){\r\n            let OrigNearState = ridesNearState.filter( el => el.city === filterSelectValue );\r\n            let OrigUpcomingState = ridesUpcomingState.filter( el => el.city === filterSelectValue );\r\n            let OrigPastState = ridesPastState.filter( el => el.city === filterSelectValue );\r\n            OrigNearState.length > 0 ? \r\n                dispatch( originalRidesAddNearest({ originalRidesNearest:OrigNearState }) )\r\n            :\r\n                dispatch( originalRidesAddNearest({ originalRidesNearest:0 }) )\r\n            OrigUpcomingState.length > 0 ? \r\n                dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:OrigUpcomingState }) )\r\n            :\r\n                dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:0 }) )\r\n            OrigPastState.length > 0 ? \r\n                dispatch( originalRidesAddPast({ originalRidesPast:OrigPastState }) )\r\n            :\r\n                dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:0 }) )\r\n            \r\n            dispatch( changeUpandPastCounts({ upcomingCount: OrigUpcomingState.length,pastCount: OrigPastState.length }) )\r\n        }else if( \r\n            (stateSelect !== 'all' && filterSelectValue === 'all') || \r\n            (citySelect !== 'all' && filterSelectValue === 'all') ){\r\n                if( stateSelect !== 'all' ){\r\n                    let nearFilterCity = ridesNearState.filter( el => el.city === filterSelectValue );\r\n                    let finallyNear = nearFilterCity.filter( el => el.state === stateSelect );\r\n                    let upcomingFilterCity = ridesUpcomingState.filter( el => el.city === filterSelectValue );\r\n                    let finallyUpcoming = upcomingFilterCity.filter( el => el.state === stateSelect );\r\n                    let pastFilterCity = ridesPastState.filter( el => el.city === filterSelectValue );\r\n                    let finallyPast = pastFilterCity.filter( el => el.state === stateSelect );\r\n                    finallyNear.length > 0 ? \r\n                        dispatch( originalRidesAddNearest({ originalRidesNearest:finallyNear }) )\r\n                    :\r\n                        dispatch( originalRidesAddNearest({ originalRidesNearest:0 }) )\r\n                    finallyUpcoming.length > 0 ? \r\n                        dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:finallyUpcoming }) )\r\n                    :\r\n                        dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:0 }) )\r\n                    finallyPast.length > 0 ? \r\n                        dispatch( originalRidesAddPast({ originalRidesPast:finallyPast }) )\r\n                    :\r\n                        dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:0 }) )\r\n                    \r\n                    dispatch( changeUpandPastCounts({ upcomingCount: finallyUpcoming.length,pastCount: finallyPast.length }) )\r\n                }else if( citySelect !== 'all' ){\r\n                    let nearFilterCity = ridesNearState.filter( el => el.state === filterSelectValue );\r\n                    let finallyNear = nearFilterCity.filter( el => el.city === citySelect );\r\n                    let upcomingFilterCity = ridesUpcomingState.filter( el => el.state === filterSelectValue );\r\n                    let finallyUpcoming = upcomingFilterCity.filter( el => el.city === citySelect );\r\n                    let pastFilterCity = ridesPastState.filter( el => el.state === filterSelectValue );\r\n                    let finallyPast = pastFilterCity.filter( el => el.city === citySelect );\r\n                    finallyNear.length > 0 ? \r\n                        dispatch( originalRidesAddNearest({ originalRidesNearest:finallyNear }) )\r\n                    :\r\n                        dispatch( originalRidesAddNearest({ originalRidesNearest:0 }) )\r\n                    finallyUpcoming.length > 0 ? \r\n                        dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:finallyUpcoming }) )\r\n                    :\r\n                        dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:0 }) )\r\n                    finallyPast.length > 0 ? \r\n                        dispatch( originalRidesAddPast({ originalRidesPast:finallyPast }) )\r\n                    :\r\n                        dispatch( originalRidesAddUpcoming({ originalRidesUpcoming:0 }) )\r\n                    \r\n                    dispatch( changeUpandPastCounts({ upcomingCount: finallyUpcoming.length,pastCount: finallyPast.length }) )\r\n                }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"filter\">\r\n            <div className=\"container\">\r\n                <div className=\"filter-links\">\r\n                <NavLink className={ ({isActive}) => isActive ? 'active' : '' } to={`/`}>\r\n                    <h2>Nearest rides</h2>    \r\n                </NavLink> \r\n                <NavLink className={ ({isActive}) => isActive ? 'active' : '' } to={`upcoming`}>\r\n                    <h2>Upcoming rides ({upcomingCount})</h2>    \r\n                </NavLink>\r\n                <NavLink className={ ({isActive}) => isActive ? 'active' : '' } to={`past`}>\r\n                    <h2>Past rides ({pastCount})</h2>    \r\n                </NavLink>       \r\n                </div>\r\n                <div className=\"filter-selects\">\r\n                    <div onClick={handleFilterShow} className='filter-header'>\r\n                        <FontAwesomeIcon icon={faArrowDownWideShort} />\r\n                        <h2>Filter</h2>\r\n                    </div>\r\n                    <div ref={filterRef} className='filter-lists'>\r\n                        <div onClick={() => handleFilterSelect(stateRef)} className='filter-state filter-single-list'>\r\n                            <div className='filter-select-style'><FontAwesomeIcon icon={faArrowDown} /></div> \r\n                            <div className='filter-select-style'><h2>State ({stateSelect})</h2></div>\r\n                        </div>\r\n                        <div ref={stateRef} id='state' className='filter-state-list'>\r\n                            <div onClick={handleFilterSelectValue} className='filter-single-list filter-list-items'>\r\n                                <div className='filter-select-style' name='all'>all</div>\r\n                            </div>\r\n                                { \r\n                                ridesNearState.length > 0 &&\r\n                                    ridesNearState.map( (el,indx) => {\r\n                                        return(\r\n                                            <div onClick={handleFilterSelectValue} className='filter-single-list filter-list-items' key={indx}>\r\n                                                <div className='filter-select-style' name={el.state}>{el.state}</div>\r\n                                            </div>\r\n                                        )\r\n                                    } ) }\r\n                        </div>\r\n                        <div onClick={() => handleFilterSelect(cityRef)} className='filter-city filter-single-list'>\r\n                            <div className='filter-select-style'><FontAwesomeIcon icon={faArrowDown} /></div> \r\n                            <div className='filter-select-style'><h2>City ({citySelect})</h2></div>\r\n                        </div>\r\n                        <div ref={cityRef} id='city' className='filter-state-list'>\r\n                            <div onClick={handleFilterSelectValue} className='filter-single-list filter-list-items'>\r\n                                <div className='filter-select-style' name='all'>all</div>\r\n                            </div>\r\n                                { \r\n                                ridesNearState.length > 0 &&\r\n                                    ridesNearState.map( (el,indx) => {\r\n                                        return(\r\n                                            <div onClick={handleFilterSelectValue} className='filter-single-list filter-list-items' key={indx}>\r\n                                                <div  className='filter-select-style' name={el.city}>{el.city}</div>\r\n                                            </div>\r\n                                        )\r\n                                    } ) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Filter;"]},"metadata":{},"sourceType":"module"}