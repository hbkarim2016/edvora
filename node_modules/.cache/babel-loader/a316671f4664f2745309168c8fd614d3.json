{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst RideSlice = createSlice({\n  name: 'RideSlice',\n  initialState: {\n    ridesState: [],\n    userState: []\n  },\n  reducers: {\n    rideAdd: (state, action) => {\n      let ridesData = action.payload.rides_data;\n      state.ridesState = ridesData;\n    },\n    userAdd: (state, action) => {\n      let userData = action.payload.user_data;\n      state.userState = userData;\n    },\n    handleRides_Nearest: (state, action) => {\n      let userStation = action.payload.userState.station_code;\n      userStation !== undefined && console.log(userStation);\n    }\n  }\n});\nexport const {\n  rideAdd,\n  userAdd,\n  handleRides_Nearest\n} = RideSlice.actions;\nexport default RideSlice.reducer;","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/redux/reducers/RideSlice.js"],"names":["createSlice","RideSlice","name","initialState","ridesState","userState","reducers","rideAdd","state","action","ridesData","payload","rides_data","userAdd","userData","user_data","handleRides_Nearest","userStation","station_code","undefined","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,WADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,UAAU,EAAC,EADF;AAETC,IAAAA,SAAS,EAAC;AAFD,GAFa;AAM1BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAE,CAAEC,KAAF,EAASC,MAAT,KAAqB;AAC1B,UAAIC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAeC,UAA/B;AACAJ,MAAAA,KAAK,CAACJ,UAAN,GAAmBM,SAAnB;AACH,KAJI;AAKLG,IAAAA,OAAO,EAAE,CAAEL,KAAF,EAASC,MAAT,KAAqB;AAC1B,UAAIK,QAAQ,GAAGL,MAAM,CAACE,OAAP,CAAeI,SAA9B;AACAP,MAAAA,KAAK,CAACH,SAAN,GAAkBS,QAAlB;AACH,KARI;AASLE,IAAAA,mBAAmB,EAAE,CAAER,KAAF,EAASC,MAAT,KAAoB;AACrC,UAAIQ,WAAW,GAAGR,MAAM,CAACE,OAAP,CAAeN,SAAf,CAAyBa,YAA3C;AACAD,MAAAA,WAAW,KAAKE,SAAhB,IAA6BC,OAAO,CAACC,GAAR,CAAYJ,WAAZ,CAA7B;AACH;AAZI;AANiB,CAAD,CAA7B;AAuBA,OAAO,MAAM;AAAEV,EAAAA,OAAF;AAAWM,EAAAA,OAAX;AAAoBG,EAAAA;AAApB,IAA4Cf,SAAS,CAACqB,OAA5D;AACP,eAAerB,SAAS,CAACsB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst RideSlice = createSlice({\r\n    name:'RideSlice',\r\n    initialState:{\r\n        ridesState:[],\r\n        userState:[]\r\n    },\r\n    reducers:{\r\n        rideAdd: ( state, action ) => {\r\n            let ridesData = action.payload.rides_data;\r\n            state.ridesState = ridesData;\r\n        },\r\n        userAdd: ( state, action ) => {\r\n            let userData = action.payload.user_data;\r\n            state.userState = userData;\r\n        },\r\n        handleRides_Nearest: ( state, action ) =>{\r\n            let userStation = action.payload.userState.station_code;\r\n            userStation !== undefined && console.log(userStation);\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const { rideAdd, userAdd, handleRides_Nearest } = RideSlice.actions;\r\nexport default RideSlice.reducer;"]},"metadata":{},"sourceType":"module"}