{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Computer\\\\my work\\\\apps\\\\edvora\\\\edvora\\\\src\\\\content\\\\components\\\\Rides\\\\Rides.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport ApiRides from '../../apis/ApiRides';\nimport FilterNearest from '../Filter/FilterFuncs/FilterNearest';\nimport FilterUpcoming from '../Filter/FilterFuncs/FilterUpcoming';\nimport FilterPast from '../Filter/FilterFuncs/FilterPast';\nimport './Rides.css';\nimport AllFilters from '../Filter/FilterFuncs/AllFilters';\nimport DateFunc from '../Date/DateFunc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rides = () => {\n  _s();\n\n  const {\n    userState,\n    dataCheck\n  } = useSelector(state => state.rideStore);\n  const {\n    originalRidesNearest,\n    originalRidesPast,\n    originalRidesUpcoming,\n    originalRide\n  } = useSelector(state => state.originalStore);\n  const dispatch = useDispatch();\n\n  if (userState.length !== 0) {\n    ApiRides(userState, dispatch, dataCheck);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rides\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [console.log(AllFilters().filter_1), originalRide === 'nearest' ? originalRidesNearest.map((el, indx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ride-single\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ride-single-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ride-single-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ride-single-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Ride Id : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: el.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Origin Station : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: el.origin_station_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"station_path : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"[\", el.station_path.map((el_, indx_) => indx_ + 1 !== el.station_path.length ? el_ + ',' : el_), \"]\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Date : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: `\n                                                                ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \n                                                                ${DateFunc(el.date).month} \n                                                                ${DateFunc(el.date).year} \n                                                                ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\n                                                                :\n                                                                ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\n                                                            `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Distance : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ride-single-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: el.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: el.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this);\n      }) : originalRide === 'upcoming' ? FilterUpcoming(originalRidesUpcoming) : originalRide === 'past' ? FilterPast(originalRidesPast) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ride-single not-found\",\n        children: \" Not Rides Here \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Rides, \"TPDhZbuksUMNsECfi2KHl3LhE9A=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Rides;\nexport default Rides;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rides\");","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/components/Rides/Rides.jsx"],"names":["useDispatch","useSelector","ApiRides","FilterNearest","FilterUpcoming","FilterPast","AllFilters","DateFunc","Rides","userState","dataCheck","state","rideStore","originalRidesNearest","originalRidesPast","originalRidesUpcoming","originalRide","originalStore","dispatch","length","console","log","filter_1","map","el","indx","id","origin_station_code","station_path","el_","indx_","date","day","month","year","hours","minutes","city"],"mappings":"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","sourcesContent":["\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ApiRides from '../../apis/ApiRides';\r\nimport FilterNearest from '../Filter/FilterFuncs/FilterNearest';\r\nimport FilterUpcoming from '../Filter/FilterFuncs/FilterUpcoming';\r\nimport FilterPast from '../Filter/FilterFuncs/FilterPast';\r\nimport './Rides.css';\r\nimport AllFilters from '../Filter/FilterFuncs/AllFilters';\r\nimport DateFunc from '../Date/DateFunc';\r\n\r\nconst Rides = () => {\r\n\r\n    const { userState, dataCheck } = useSelector( state => state.rideStore )\r\n    const { originalRidesNearest,originalRidesPast,originalRidesUpcoming,originalRide } = useSelector( state => state.originalStore )\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    if( userState.length !== 0 ){\r\n        ApiRides(userState ,dispatch,dataCheck)\r\n    }\r\n\r\n    return(\r\n        <div className=\"rides\">\r\n            <div className=\"container\">\r\n                { console.log(AllFilters().filter_1) }\r\n                { \r\n                    originalRide === 'nearest' ? \r\n                        originalRidesNearest.map( (el,indx) => {\r\n                            return(\r\n                                <div className=\"ride-single\" key={ el.id }>\r\n                                    <div className='ride-single-content'>\r\n                                        <div className='ride-single-img'></div>\r\n                                        <div className='ride-single-data'>\r\n                                            <h2>Ride Id : <span>{ el.id }</span></h2>\r\n                                            <h2>Origin Station : <span>{ el.origin_station_code }</span></h2>\r\n                                            <h2>station_path : <span>[{ \r\n                                                                            el.station_path.map( (el_, indx_) => \r\n                                                                                indx_ + 1 !== el.station_path.length ? el_ + ',' : el_ \r\n                                                                            ) \r\n                                                                        }]</span></h2>\r\n                                            <h2>Date : <span>{`\r\n                                                                ${DateFunc(el.date).day < 10 ? '0' + DateFunc(el.date).day : DateFunc(el.date).day}th \r\n                                                                ${DateFunc(el.date).month} \r\n                                                                ${DateFunc(el.date).year} \r\n                                                                ${DateFunc(el.date).hours < 10 ? '0' + DateFunc(el.date).hours : DateFunc(el.date).hours}\r\n                                                                :\r\n                                                                ${DateFunc(el.date).minutes < 10 ? '0' + DateFunc(el.date).minutes : DateFunc(el.date).minutes}\r\n                                                            `}</span></h2>\r\n                                            <h2>Distance : <span>0</span></h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='ride-single-option'>\r\n                                        <div>{ el.city }</div>\r\n                                        <div>{ el.state }</div>\r\n                                    </div>\r\n                                </div>\r\n                            )})\r\n                    : originalRide === 'upcoming' ?\r\n                        FilterUpcoming(originalRidesUpcoming)\r\n                    : originalRide === 'past' ?\r\n                        FilterPast(originalRidesPast)\r\n                    : <div className=\"ride-single not-found\"> Not Rides Here </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Rides;"]},"metadata":{},"sourceType":"module"}