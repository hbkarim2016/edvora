{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst OriginalRidesSlice = createSlice({\n  name: 'OriginalRidesSlice',\n  initialState: {\n    originalRidesNearest: [],\n    originalRidesUpcoming: [],\n    originalRidesPast: []\n  },\n  reducers: {\n    originalRidesAddNearest: (state, action) => {\n      let ridesData = action.payload.originalRidesNearest;\n      state.originalRidesNearest = ridesData;\n      console.log('from Nearest original');\n    },\n    originalRidesAddUpcoming: (state, action) => {\n      let ridesData = action.payload.originalRidesUpcoming;\n      state.originalRidesUpcoming = ridesData;\n      console.log('from Upcoming original');\n    },\n    originalRidesAddPast: (state, action) => {\n      let ridesData = action.payload.originalRidesPast;\n      state.originalRidesPast = ridesData;\n      console.log('from Past original');\n    }\n  }\n});\nexport const {\n  originalRidesAddNearest,\n  originalRidesAddUpcoming,\n  originalRidesAddPast\n} = OriginalRidesSlice.actions;\nexport default OriginalRidesSlice.reducer;","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/redux/reducers/OriginalRidesSlice.js"],"names":["createSlice","OriginalRidesSlice","name","initialState","originalRidesNearest","originalRidesUpcoming","originalRidesPast","reducers","originalRidesAddNearest","state","action","ridesData","payload","console","log","originalRidesAddUpcoming","originalRidesAddPast","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,kBAAkB,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAC,oBAD8B;AAEnCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,oBAAoB,EAAC,EADZ;AAETC,IAAAA,qBAAqB,EAAC,EAFb;AAGTC,IAAAA,iBAAiB,EAAC;AAHT,GAFsB;AAOnCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,uBAAuB,EAAE,CAAEC,KAAF,EAASC,MAAT,KAAqB;AAC1C,UAAIC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAeR,oBAA/B;AACAK,MAAAA,KAAK,CAACL,oBAAN,GAA6BO,SAA7B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,KALI;AAMLC,IAAAA,wBAAwB,EAAE,CAAEN,KAAF,EAASC,MAAT,KAAqB;AAC3C,UAAIC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAeP,qBAA/B;AACAI,MAAAA,KAAK,CAACJ,qBAAN,GAA8BM,SAA9B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,KAVI;AAWLE,IAAAA,oBAAoB,EAAE,CAAEP,KAAF,EAASC,MAAT,KAAqB;AACvC,UAAIC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAeN,iBAA/B;AACAG,MAAAA,KAAK,CAACH,iBAAN,GAA0BK,SAA1B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;AAfI;AAP0B,CAAD,CAAtC;AA0BA,OAAO,MAAM;AACTN,EAAAA,uBADS;AAETO,EAAAA,wBAFS;AAGTC,EAAAA;AAHS,IAGgBf,kBAAkB,CAACgB,OAHzC;AAKP,eAAehB,kBAAkB,CAACiB,OAAlC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst OriginalRidesSlice = createSlice({\r\n    name:'OriginalRidesSlice',\r\n    initialState:{\r\n        originalRidesNearest:[],\r\n        originalRidesUpcoming:[],\r\n        originalRidesPast:[]\r\n    },\r\n    reducers:{\r\n        originalRidesAddNearest: ( state, action ) => {\r\n            let ridesData = action.payload.originalRidesNearest;\r\n            state.originalRidesNearest = ridesData;\r\n            console.log('from Nearest original')\r\n        },\r\n        originalRidesAddUpcoming: ( state, action ) => {\r\n            let ridesData = action.payload.originalRidesUpcoming;\r\n            state.originalRidesUpcoming = ridesData;\r\n            console.log('from Upcoming original')\r\n        },\r\n        originalRidesAddPast: ( state, action ) => {\r\n            let ridesData = action.payload.originalRidesPast;\r\n            state.originalRidesPast = ridesData;\r\n            console.log('from Past original')\r\n        }\r\n    }\r\n})\r\n\r\nexport const { \r\n    originalRidesAddNearest,\r\n    originalRidesAddUpcoming,\r\n    originalRidesAddPast } = OriginalRidesSlice.actions;\r\n\r\nexport default OriginalRidesSlice.reducer;"]},"metadata":{},"sourceType":"module"}