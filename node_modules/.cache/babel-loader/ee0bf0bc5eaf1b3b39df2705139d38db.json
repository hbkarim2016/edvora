{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport { rideAdd, rideUpload } from \"../../redux/reducers/RideSlice\";\n\nconst NearestRides = (ridesDataState, dispatch) => {\n  /*\r\n  const { userState } = useSelector( state => state.rideStore )\r\n    let userStationCode = userState.station_code;*/\n\n  /*let ridesNearest = [];\r\n  let rides_1 = ridesDataState.filter( el => {\r\n      return el.station_path.includes( userStationCode )\r\n  } );\r\n  \r\n  if(rides_1 !== undefined) {\r\n      ridesNearest[0] = rides_1[0]\r\n      if( !(ridesNearest.includes(undefined)) ){\r\n          //return dispatch( rideUpload( { rides_data:ridesNearest } ) )\r\n          console.log( ridesNearest )\r\n      }\r\n  };*/\n  //dispatch( rideAdd( { rides_data: ridesState } ) )\n};\n\n_c = NearestRides;\nexport default NearestRides;\n\nvar _c;\n\n$RefreshReg$(_c, \"NearestRides\");","map":{"version":3,"sources":["C:/My Computer/my work/apps/edvora/edvora/src/content/components/NearestRides/NearestRides.jsx"],"names":["useSelector","rideAdd","rideUpload","NearestRides","ridesDataState","dispatch"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,gCAApC;;AACA,MAAMC,YAAY,GAAG,CAACC,cAAD,EAAiBC,QAAjB,KAA8B;AAC/C;AACJ;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACH,CAnBD;;KAAMF,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { rideAdd, rideUpload } from \"../../redux/reducers/RideSlice\";\r\nconst NearestRides = (ridesDataState, dispatch) => {\r\n    /*\r\n    const { userState } = useSelector( state => state.rideStore )\r\n\r\n    let userStationCode = userState.station_code;*/\r\n    /*let ridesNearest = [];\r\n    let rides_1 = ridesDataState.filter( el => {\r\n        return el.station_path.includes( userStationCode )\r\n    } );\r\n    \r\n    if(rides_1 !== undefined) {\r\n        ridesNearest[0] = rides_1[0]\r\n        if( !(ridesNearest.includes(undefined)) ){\r\n            //return dispatch( rideUpload( { rides_data:ridesNearest } ) )\r\n            console.log( ridesNearest )\r\n        }\r\n    };*/\r\n\r\n    //dispatch( rideAdd( { rides_data: ridesState } ) )\r\n}\r\nexport default NearestRides;"]},"metadata":{},"sourceType":"module"}